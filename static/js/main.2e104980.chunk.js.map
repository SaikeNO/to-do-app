{"version":3,"sources":["Components/AddTask.js","Components/Task.js","Components/TaskList.js","Components/App.js","reportWebVitals.js","index.js"],"names":["AddTask","minDate","Date","toISOString","slice","state","text","checked","date","handleText","e","setState","target","value","handleCheckbox","handleDate","handleClick","length","props","add","maxDate","this","className","type","placeholder","onChange","id","htmlFor","min","max","onClick","Component","Task","task","active","important","finishDate","style","color","change","delete","finish","toLocaleString","TaskList","tasks","filter","done","sort","a","b","activeTasks","map","doneTasks","fontSize","App","counter","deleteTask","index","findIndex","splice","changeTaskStatus","forEach","getTime","addTask","console","log","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2e104980.chunk.js","sourcesContent":["import React, {Component} from 'react';\r\nimport \"./AddTask.css\";\r\n\r\nclass AddTask extends Component {\r\n\r\n    minDate = new Date().toISOString().slice(0,10);\r\n\r\n    state = { \r\n        text: '',\r\n        checked: false,\r\n        date: this.minDate\r\n    }\r\n\r\n\r\n    handleText = e => {\r\n        this.setState({\r\n            text: e.target.value\r\n        })\r\n    }\r\n\r\n    handleCheckbox = e => {\r\n        this.setState({\r\n            checked: e.target.checked\r\n        })\r\n    }\r\n\r\n    handleDate = e =>{\r\n        this.setState({\r\n            date: e.target.value\r\n        })\r\n    }\r\n\r\n    handleClick = () => {\r\n        const {text,checked,date} = this.state;\r\n        if(text.length < 2) return\r\n        const add = this.props.add(text,date,checked)\r\n        if(add){\r\n            this.setState({\r\n                text: '',\r\n                checked: false,\r\n                date: this.minDate,\r\n            })\r\n        }\r\n    }\r\n\r\n    render() { \r\n\r\n        let maxDate = this.minDate.slice(0,4) * 1 + 1\r\n        maxDate = `${maxDate}-12-31`\r\n\r\n        return ( \r\n            <div className='form'>\r\n                <input type=\"text\" placeholder='dodaj zadanie' value={this.state.text} onChange={this.handleText}/>\r\n                <input type=\"checkbox\" checked={this.state.checked} id=\"important\" onChange={this.handleCheckbox}/>\r\n                <label htmlFor=\"important\">Priorytet</label>\r\n                <br/>\r\n                <label htmlFor=\"date\">Do kiedy zrobić</label>\r\n                <input type=\"date\" id=\"date\" value={this.state.date} min={this.minDate} max={maxDate} onChange={this.handleDate}/>\r\n                <br/>\r\n                <button onClick={this.handleClick}>Dodaj</button>\r\n            </div>\r\n         );\r\n    }\r\n}\r\n \r\nexport default AddTask;","const Task = props => {\r\n    const style = {\r\n        color: 'red'\r\n    }\r\n    \r\n    const {text, date, id, active,important, finishDate} = props.task\r\n\r\n    \r\n\r\n    if(active){\r\n        return ( \r\n            <div>\r\n                <p>\r\n                    <strong style={important ? style : null}>{text}</strong>- do <span>{date} </span>\r\n                    <button onClick={()=>props.change(id)}>Zostało wykonane</button>\r\n                    <button onClick={()=>props.delete(id)}>X</button>\r\n                </p>\r\n            </div>\r\n        );\r\n    } else{\r\n        const finish = new Date(finishDate).toLocaleString()\r\n        return(\r\n            <div>\r\n                <p>\r\n                    <strong >{text}</strong><em> (zrobić do {date})</em>\r\n                    <br/> \r\n                    -potwierdzenie wykonania <span>{finish}</span>\r\n                    <button onClick={()=>props.delete(id)}>X</button>\r\n                </p>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n \r\nexport default Task;","import Task from './Task'\r\n\r\nconst TaskList = props => {\r\n    const active = props.tasks.filter(task => task.active);\r\n    const done = props.tasks.filter(task => !task.active);\r\n\r\n    if(done.length >=2) done.sort((a,b) =>  b.finishDate - a.finishDate)\r\n    \r\n    // SORT BY DATE\r\n    if(active.length >= 2){\r\n        active.sort((a,b) => {\r\n            a = a.date\r\n            b = b.date\r\n\r\n            if(a < b) return -1;\r\n            if(a > b) return 1;\r\n            return 0\r\n        })\r\n    }\r\n\r\n    // SORT BY FIRST LETTER\r\n    // if(active.length >= 2) {\r\n    //     active.sort((a,b) => {\r\n    //         a = a.text.toLowerCase()\r\n    //         b = b.text.toLowerCase()\r\n\r\n    //         if(a < b) return -1;\r\n    //         if(a > b) return 1;\r\n    //         return 0\r\n\r\n    //     })\r\n    // }\r\n\r\n\r\n    const activeTasks = active.map(task => <Task key={task.id} task={task} delete={props.delete} change={props.change}/>)\r\n    \r\n    const doneTasks = done.map(task => <Task key={task.id} task={task} delete={props.delete} change={props.change}/>)\r\n    return ( \r\n        <div>\r\n            <div className=\"active\">\r\n                <h2>Zadania do zrobienia</h2>\r\n                {activeTasks.length > 0 ? activeTasks : \"brak zadań, ale z Ciebie KOX\"}\r\n            </div>\r\n            \r\n            <hr/>\r\n\r\n            <div className=\"done\">\r\n                <h3>Zadania zrobione <em>({doneTasks.length})</em></h3>\r\n                {doneTasks.length > 3 && <span style={{fontSize: 10}}>Wyświetlone są jedynie 3 ostatnie elementy</span>}\r\n                {/* {doneTasks.length > 0 ? doneTasks.slice(0,3) : \"Mordo weź się do roboty!\"} */}\r\n                {doneTasks.slice(0,3)}\r\n            </div>\r\n            \r\n        </div>\r\n     );\r\n}\r\n \r\nexport default TaskList;","import './App.css';\nimport AddTask from './AddTask'\nimport TaskList from './TaskList'\nimport { Component } from 'react';\n\nclass App extends Component {\n\n  state = {\n    tasks: [\n      {\n        id: 0,\n        text: 'zagrać w Wiedźmina 3',\n        date: '2021-02-15',\n        important: true,\n        active: true,\n        finishDate: null\n      },\n      {\n        id: 1,\n        text: 'zrobic dobry uczynek',\n        date: '2021-06-15',\n        important: false,\n        active: true,\n        finishDate: null\n      },\n      {\n        id: 2,\n        text: 'Kupic mleko',\n        date: '2021-01-25',\n        important: true,\n        active: true,\n        finishDate: null\n      },\n      {\n        id: 3,\n        text: 'umyć samochód',\n        date: '2021-02-24',\n        important: true,\n        active: true,\n        finishDate: null\n      },\n    ]\n  }\n\n  counter = this.state.tasks.length \n\n  deleteTask = (id) => {\n    const tasks = [...this.state.tasks]\n    const index = tasks.findIndex(task => task.id === id)\n    tasks.splice(index, 1)\n    this.setState({\n      tasks\n    })\n  }\n\n  changeTaskStatus = (id) => {\n    const tasks = [...this.state.tasks]\n    tasks.forEach(task =>{\n      if (task.id === id){\n        task.active = false;\n        task.finishDate = new Date().getTime()\n      }\n    })\n    this.setState({\n      tasks\n    })\n    \n  }\n\n  addTask = (text,date,important) =>{\n    console.log('dodaj')\n    const task = {\n        id: this.counter,\n        text,\n        date,\n        important,\n        active: true,\n        finishDate: null\n    }\n    this.counter++;\n\n    const tasks = [...this.state.tasks, task];\n    this.setState({\n      tasks\n    })\n\n    return true\n  }\n\n  render(){\n    return (\n    <div className=\"App\">\n      <h1>TO DO APP</h1>\n      <AddTask add={this.addTask}/>\n      <TaskList tasks={this.state.tasks} delete={this.deleteTask} change={this.changeTaskStatus}/>\n    </div>\n  );\n  }\n  \n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './Components/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}