{"version":3,"sources":["Pages/AddTask.js","Components/Task.js","Pages/TaskList.js","Pages/DoneTasks.js","Components/Navigation.js","Components/Header.js","img/to_do.svg","Pages/Welcome.js","img/error.svg","Pages/ErrorPage.js","img/calendar.svg","Components/App.js","reportWebVitals.js","index.js"],"names":["AddTask","props","minDate","Date","toISOString","slice","useState","text","setText","priorityChecked","setPriorityCheked","date","setDate","maxDate","className","htmlFor","type","placeholder","value","id","onChange","e","target","checked","min","max","onClick","length","add","Task","task","active","finishDate","change","delete","finish","toLocaleString","TaskList","tasks","filter","priorityTasks","important","notPriorityTasks","sort","a","b","activePriorityTasks","map","activeNotPriorityTasks","DoneTasks","done","doneTasks","BottomPanel","to","Header","calendar","activeTasks","src","alt","Welcome","welcomePanelRef","useRef","ref","to_do","ErrorPage","error","App","setTasks","counter","deleteTask","tasksList","index","findIndex","splice","changeTaskStatus","forEach","getTime","addTask","path","exact","component","render","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.49b78b8d.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport \"../styles/AddTask.css\";\r\n\r\nconst AddTask = props => {\r\n\r\n    const minDate = new Date().toISOString().slice(0, 10);\r\n\r\n    const [text, setText] = useState('');\r\n    const [priorityChecked, setPriorityCheked] = useState(false);\r\n    const [date, setDate] = useState(minDate);\r\n\r\n\r\n    const handleText = e => {\r\n        setText(e.target.value)\r\n    }\r\n\r\n    const handleCheckbox = e => {\r\n        setPriorityCheked(e.target.checked)\r\n    }\r\n\r\n    const handleDate = e => {\r\n        setDate(e.target.value)\r\n    }\r\n\r\n    const handleClick = () => {\r\n        if (text.length < 2) return\r\n        const add = props.add(text, date, priorityChecked)\r\n        if (add) {\r\n            setText('')\r\n            setPriorityCheked(false)\r\n            setDate(minDate)\r\n        }\r\n    }\r\n    let maxDate = minDate.slice(0, 4) * 1 + 1\r\n    maxDate = `${maxDate}-12-31`\r\n    return (\r\n        <div className='form'>\r\n            <label htmlFor=\"add\">Add task</label>\r\n            <input\r\n                type=\"text\"\r\n                placeholder='add task'\r\n                value={text}\r\n                id='add'\r\n                onChange={handleText}\r\n            />\r\n            <div className=\"priority-checkbox\">\r\n                <input\r\n                    type=\"checkbox\"\r\n                    checked={priorityChecked}\r\n                    id=\"important\"\r\n                    onChange={handleCheckbox}\r\n                />\r\n                <label htmlFor=\"important\">Priority</label>\r\n            </div>\r\n            <div className=\"date\">\r\n                <label htmlFor=\"date\">Choose when to do</label>\r\n                <input\r\n                    type=\"date\"\r\n                    id=\"date\"\r\n                    value={date}\r\n                    min={minDate}\r\n                    max={maxDate}\r\n                    onChange={handleDate}\r\n                />\r\n            </div>\r\n            <button onClick={handleClick}>Confirm</button>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default AddTask;\r\n","import \"../styles/Task.css\";\r\nconst Task = props => {\r\n\r\n    const { text, date, id, active, finishDate } = props.task\r\n\r\n    if (active) {\r\n        return (\r\n            <div className='task'>\r\n                <h3 className=\"task__title\">{text}</h3>\r\n                <p className=\"task__date\">{date} </p>\r\n                <div className=\"task__btns\">\r\n                    <button onClick={() => props.change(id)}> <span className=\"fas fa-check-circle\"></span> <span>Done</span></button>\r\n                    <button onClick={() => props.delete(id)}> <span className=\"fas fa-times\"></span> <span>Delete</span> </button>\r\n                </div>\r\n            </div>\r\n        );\r\n    } else {\r\n        const finish = new Date(finishDate).toLocaleString()\r\n        return (\r\n            <div className='task'>\r\n                <h3 className=\"task__title\" >{text}</h3>\r\n                <p className=\"task__date\">to {date}</p>\r\n                <div className=\"task__confirmation\">\r\n                    <p >Confirmation</p>\r\n                    <span>{finish}</span>\r\n                </div>\r\n                <div className=\"task__btns\">\r\n                    <button onClick={() => props.delete(id)}> <span className=\"fas fa-times\"></span> <span>Delete</span> </button>\r\n                </div>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Task;","import Task from '../Components/Task';\r\nimport '../styles/TaskList.css'\r\n\r\nconst TaskList = props => {\r\n    const tasks = props.tasks.filter(task => task.active);\r\n    const priorityTasks = tasks.filter(task => task.important)\r\n    const notPriorityTasks = tasks.filter(task => !task.important);\r\n\r\n    // if (done.length >= 2) done.sort((a, b) => b.finishDate - a.finishDate)\r\n\r\n    // SORT BY DATE\r\n    if (tasks.length >= 2) {\r\n        tasks.sort((a, b) => {\r\n            a = a.date\r\n            b = b.date\r\n\r\n            if (a < b) return -1;\r\n            if (a > b) return 1;\r\n            return 0\r\n        })\r\n    }\r\n\r\n    // SORT BY FIRST LETTER\r\n    // if(active.length >= 2) {\r\n    //     active.sort((a,b) => {\r\n    //         a = a.text.toLowerCase()\r\n    //         b = b.text.toLowerCase()\r\n\r\n    //         if(a < b) return -1;\r\n    //         if(a > b) return 1;\r\n    //         return 0\r\n\r\n    //     })\r\n    // }\r\n\r\n    const activePriorityTasks = priorityTasks.map(task => <Task key={task.id} task={task} delete={props.delete} change={props.change} />)\r\n    const activeNotPriorityTasks = notPriorityTasks.map(task => <Task key={task.id} task={task} delete={props.delete} change={props.change} />)\r\n    return (\r\n        <div>\r\n            <div className=\"active-tasks\">\r\n                <div className=\"priotity\">\r\n                    <p className=\"priority__title\">\r\n                        Priority\r\n                        <span className='line line--red'></span>\r\n                    </p>\r\n                    <span className=\"priority__counter\">{activePriorityTasks.length} tasks</span>\r\n                    <div className=\"active-tasks__container\">\r\n                        {activePriorityTasks.length > 0 ? activePriorityTasks : <p>0 priority tasks. Add a few</p>}\r\n                    </div>\r\n                </div>\r\n                <div className=\"not-priority\">\r\n                    <p className=\"not-priority__title\">\r\n                        In progress\r\n                        <span className='line line--blue'></span>\r\n                    </p>\r\n                    <div className=\"active-tasks__container\">\r\n                        {activeNotPriorityTasks.length > 0 ? activeNotPriorityTasks : <p>Add few tasks</p>}\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n            {/* <div className=\"done\">\r\n                <h3>Zadania zrobione <em>({doneTasks.length})</em></h3>\r\n                {doneTasks.length > 3 && <span style={{ fontSize: 10 }}>Wyświetlone są jedynie 3 ostatnie elementy</span>}\r\n                {/* {doneTasks.length > 0 ? doneTasks.slice(0,3) : \"Mordo weź się do roboty!\"} }\r\n                {doneTasks.slice(0, 3)}\r\n            </div> */}\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default TaskList;","import React from 'react';\r\nimport Task from '../Components/Task'\r\n\r\nconst DoneTasks = (props) => {\r\n\r\n    const { doneTasks } = props\r\n\r\n    const done = doneTasks.map(task => <Task key={task.id} task={task} delete={props.delete} />)\r\n\r\n    return (\r\n        <div className=\"done-tasks\">\r\n            <p className=\"priority__title\">\r\n                Done\r\n                <span className='line line--red'></span>\r\n            </p>\r\n            <span className=\"priority__counter\">{done.length} tasks done</span>\r\n            <div className=\"active-tasks__container\">\r\n                {done.length > 0 ? done : null}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default DoneTasks;","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport '../styles/Navigation.css'\r\n\r\nconst BottomPanel = () => {\r\n    // const taskClassName = isActive.tasks ? 'tasks active' : 'tasks'\r\n    // const addTaskClassName = isActive.add ? 'add-task active' : 'add-task'\r\n    // const doneTasksClassName = isActive.done ? 'done-tasks active' : 'done-tasks'\r\n\r\n    return (\r\n        <nav className=\"navigation \">\r\n            <NavLink className='tasks' to={'/tasks'}>\r\n                <span></span><span></span><span></span><span></span>\r\n            </NavLink>\r\n            <NavLink className='add-task' to={'/add'}>\r\n                <span></span><span></span>\r\n            </NavLink>\r\n            <NavLink className='done-tasks' to={'/done'}>\r\n            </NavLink >\r\n        </nav>\r\n    );\r\n}\r\n\r\nexport default BottomPanel;","import React from 'react';\r\n\r\nimport '../styles/Header.css'\r\nconst Header = ({ calendar, tasks }) => {\r\n    const activeTasks = tasks.filter(task => task.active);\r\n    return (\r\n        <header>\r\n            <h1>Good morning Mateusz</h1>\r\n            <div>\r\n                <img src={calendar} alt=\"calendar\" />\r\n                <h2> {activeTasks.length} tasks to do </h2>\r\n            </div>\r\n        </header>\r\n    );\r\n}\r\n\r\nexport default Header;","export default __webpack_public_path__ + \"static/media/to_do.757033f4.svg\";","import { NavLink } from 'react-router-dom';\r\nimport { useEffect, useRef } from 'react';\r\n\r\nimport '../styles/Welcome.css';\r\nimport to_do from '../img/to_do.svg'\r\n\r\nconst Welcome = () => {\r\n\r\n    const welcomePanelRef = useRef()\r\n\r\n    // useEffect(() => {\r\n    //     welcomePanelRef.current.style.animation = \"transitionOpacity .1s both\"\r\n    //     console.log(welcomePanelRef)\r\n    // })\r\n\r\n    return (\r\n        <div ref={welcomePanelRef} className=\"welcome-panel\">\r\n            <img src={to_do} alt=\"girl with to do list\" />\r\n            <NavLink to={'/tasks'}>\r\n                <button> Let's start</button>\r\n            </NavLink>\r\n            <p>Simple TO DO APP | &copy; Mateusz Lengiewicz </p>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Welcome;","export default __webpack_public_path__ + \"static/media/error.4861ae77.svg\";","import { NavLink } from 'react-router-dom';\r\n\r\nimport error from '../img/error.svg'\r\nconst ErrorPage = () => {\r\n    return (\r\n        <div className='error'>\r\n            <img src={error} alt='page not found' />\r\n            <p>Something went wrong. Page not found.</p>\r\n            <NavLink to={'/'}>\r\n                <button>Back to home page</button>\r\n            </NavLink>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ErrorPage;","export default __webpack_public_path__ + \"static/media/calendar.c3927202.svg\";","import AddTask from '../Pages/AddTask'\r\nimport TaskList from '../Pages/TaskList'\r\nimport DoneTasks from '../Pages/DoneTasks'\r\nimport Navigation from './Navigation'\r\nimport Header from './Header'\r\nimport Welcome from '../Pages/Welcome'\r\nimport ErrorPage from '../Pages/ErrorPage'\r\n\r\nimport { useState } from 'react';\r\nimport { BrowserRouter as Router } from 'react-router-dom';\r\nimport { Switch, Route } from 'react-router-dom';\r\n\r\n\r\nimport '../styles/App.css';\r\nimport calendar from '../img/calendar.svg'\r\n\r\nconst App = () => {\r\n  const [tasks, setTasks] = useState([\r\n    {\r\n      id: 0,\r\n      text: 'zagrać w Wiedźmina',\r\n      date: '2021-02-15',\r\n      important: true,\r\n      active: true,\r\n      finishDate: null\r\n    },\r\n    {\r\n      id: 1,\r\n      text: 'zrobic dobry uczynek',\r\n      date: '2021-06-15',\r\n      important: false,\r\n      active: true,\r\n      finishDate: null\r\n    },\r\n    {\r\n      id: 2,\r\n      text: 'Kupic mleko',\r\n      date: '2021-01-25',\r\n      important: true,\r\n      active: true,\r\n      finishDate: null\r\n    },\r\n    {\r\n      id: 3,\r\n      text: 'umyć samochód',\r\n      date: '2021-02-24',\r\n      important: true,\r\n      active: true,\r\n      finishDate: null\r\n    },\r\n  ])\r\n\r\n  let counter = tasks.length\r\n\r\n  const deleteTask = (id) => {\r\n    const tasksList = [...tasks]\r\n    const index = tasksList.findIndex(task => task.id === id)\r\n    tasksList.splice(index, 1)\r\n    setTasks(tasksList)\r\n  }\r\n\r\n  const changeTaskStatus = (id) => {\r\n    const tasksList = [...tasks]\r\n    tasksList.forEach(task => {\r\n      if (task.id === id) {\r\n        task.active = false;\r\n        task.finishDate = new Date().getTime()\r\n      }\r\n    })\r\n    setTasks(tasksList)\r\n\r\n  }\r\n\r\n  const addTask = (text, date, important) => {\r\n    const task = {\r\n      id: counter,\r\n      text,\r\n      date,\r\n      important,\r\n      active: true,\r\n      finishDate: null\r\n    }\r\n    counter = counter + 1\r\n\r\n    const tasksList = [...tasks, task];\r\n    setTasks(tasksList)\r\n\r\n    return true\r\n  }\r\n\r\n  const doneTasks = tasks.filter(task => !task.active);\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <Header calendar={calendar} tasks={tasks} />\r\n      <Router>\r\n        <Switch>\r\n          <Route path={'/'} exact component={Welcome} />\r\n          <Route path={'/tasks'} render={() => <TaskList tasks={tasks} delete={deleteTask} change={changeTaskStatus} />} />\r\n          <Route path={'/add'} render={() => <AddTask add={addTask} />} />\r\n          <Route path={'/done'} render={() => <DoneTasks doneTasks={doneTasks} delete={deleteTask} />} />\r\n          <Route path={''} component={ErrorPage} />\r\n        </Switch>\r\n        <Navigation />\r\n      </Router>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './styles/index.css';\r\nimport App from './Components/App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}