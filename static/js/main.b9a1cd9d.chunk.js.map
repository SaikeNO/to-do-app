{"version":3,"sources":["Components/AddTask.js","Components/Task.js","Components/TaskList.js","Components/Navigation.js","calendar.svg","Components/App.js","reportWebVitals.js","index.js"],"names":["AddTask","minDate","Date","toISOString","slice","state","text","checked","date","handleText","e","setState","target","value","handleCheckbox","handleDate","handleClick","length","props","add","maxDate","this","className","htmlFor","type","placeholder","id","onChange","min","max","onClick","Component","Task","task","active","finishDate","change","delete","finish","toLocaleString","TaskList","tasks","filter","priorityTasks","important","notPriorityTasks","sort","a","b","activePriorityTasks","map","activeNotPriorityTasks","BottomPanel","isActive","taskClassName","addTaskClassName","doneTasksClassName","done","to","App","counter","deleteTask","index","findIndex","splice","changeTaskStatus","forEach","getTime","addTask","console","log","src","calendar","alt","path","render","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b9a1cd9d.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport \"../styles/AddTask.css\";\r\n\r\nclass AddTask extends Component {\r\n\r\n    minDate = new Date().toISOString().slice(0, 10);\r\n    state = {\r\n        text: '',\r\n        checked: false,\r\n        date: this.minDate\r\n    }\r\n\r\n\r\n    handleText = e => {\r\n        this.setState({\r\n            text: e.target.value\r\n        })\r\n    }\r\n\r\n    handleCheckbox = e => {\r\n        this.setState({\r\n            checked: e.target.checked\r\n        })\r\n    }\r\n\r\n    handleDate = e => {\r\n        this.setState({\r\n            date: e.target.value\r\n        })\r\n    }\r\n\r\n    handleClick = () => {\r\n        const { text, checked, date } = this.state;\r\n        if (text.length < 2) return\r\n        const add = this.props.add(text, date, checked)\r\n        if (add) {\r\n            this.setState({\r\n                text: '',\r\n                checked: false,\r\n                date: this.minDate,\r\n            })\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n        let maxDate = this.minDate.slice(0, 4) * 1 + 1\r\n        maxDate = `${maxDate}-12-31`\r\n        return (\r\n            <div className='form'>\r\n                <label htmlFor=\"add\">Add task</label>\r\n                <input\r\n                    type=\"text\"\r\n                    placeholder='add task'\r\n                    value={this.state.text}\r\n                    id='add'\r\n                    onChange={this.handleText}\r\n                />\r\n                <div className=\"priority-checkbox\">\r\n                    <input\r\n                        type=\"checkbox\"\r\n                        checked={this.state.checked}\r\n                        id=\"important\"\r\n                        onChange={this.handleCheckbox}\r\n                    />\r\n                    <label htmlFor=\"important\">Priority</label>\r\n                </div>\r\n                <div className=\"date\">\r\n                    <label htmlFor=\"date\">Choose when to do</label>\r\n                    <input\r\n                        type=\"date\"\r\n                        id=\"date\"\r\n                        value={this.state.date}\r\n                        min={this.minDate}\r\n                        max={maxDate}\r\n                        onChange={this.handleDate}\r\n                    />\r\n                </div>\r\n                <button onClick={this.handleClick}>Confirm</button>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default AddTask;","import \"../styles/Task.css\";\r\nconst Task = props => {\r\n\r\n    const { text, date, id, active, finishDate } = props.task\r\n\r\n    if (active) {\r\n        return (\r\n            <div className='task'>\r\n                <h3 className=\"task__title\">{text}</h3>\r\n                <p className=\"task__date\">{date} </p>\r\n                <div className=\"task__btns\">\r\n                    <button onClick={() => props.change(id)}> <span className=\"fas fa-check-circle\"></span> <span>Done</span></button>\r\n                    <button onClick={() => props.delete(id)}> <span className=\"fas fa-times\"></span> <span>Delete</span> </button>\r\n                </div>\r\n\r\n            </div>\r\n        );\r\n    } else {\r\n        const finish = new Date(finishDate).toLocaleString()\r\n        return (\r\n            <div className='task'>\r\n                <h3 className=\"task__title\" >{text}</h3>\r\n                <em> (zrobiÄ‡ do {date})</em>\r\n                <br />\r\n                    -potwierdzenie wykonania <span>{finish}</span>\r\n                <button onClick={() => props.delete(id)}>X</button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Task;","import Task from './Task';\r\nimport '../styles/TaskList.css'\r\n\r\nconst TaskList = props => {\r\n    const tasks = props.tasks.filter(task => task.active);\r\n    const priorityTasks = tasks.filter(task => task.important)\r\n    const notPriorityTasks = tasks.filter(task => !task.important);\r\n\r\n    // if (done.length >= 2) done.sort((a, b) => b.finishDate - a.finishDate)\r\n\r\n    // SORT BY DATE\r\n    if (tasks.length >= 2) {\r\n        tasks.sort((a, b) => {\r\n            a = a.date\r\n            b = b.date\r\n\r\n            if (a < b) return -1;\r\n            if (a > b) return 1;\r\n            return 0\r\n        })\r\n    }\r\n\r\n    // SORT BY FIRST LETTER\r\n    // if(active.length >= 2) {\r\n    //     active.sort((a,b) => {\r\n    //         a = a.text.toLowerCase()\r\n    //         b = b.text.toLowerCase()\r\n\r\n    //         if(a < b) return -1;\r\n    //         if(a > b) return 1;\r\n    //         return 0\r\n\r\n    //     })\r\n    // }\r\n\r\n    const activePriorityTasks = priorityTasks.map(task => <Task key={task.id} task={task} delete={props.delete} change={props.change} />)\r\n    const activeNotPriorityTasks = notPriorityTasks.map(task => <Task key={task.id} task={task} delete={props.delete} change={props.change} />)\r\n    // const doneTasks = done.map(task => <Task key={task.id} task={task} delete={props.delete} change={props.change} />)\r\n    return (\r\n        <div>\r\n            <div className=\"active-tasks\">\r\n                <div className=\"priotity\">\r\n                    <p className=\"priority__title\">\r\n                        Priority\r\n                        <span className='line line--red'></span>\r\n                    </p>\r\n                    <span className=\"priority__counter\">{activePriorityTasks.length} tasks</span>\r\n                    <div className=\"active-tasks__container\">\r\n                        {activePriorityTasks.length > 0 ? activePriorityTasks : <p>0 priority tasks. Add a few</p>}\r\n                    </div>\r\n                </div>\r\n                <div className=\"not-priority\">\r\n                    <p className=\"not-priority__title\">\r\n                        In progress\r\n                        <span className='line line--blue'></span>\r\n                    </p>\r\n                    <div className=\"active-tasks__container\">\r\n                        {activeNotPriorityTasks.length > 0 ? activeNotPriorityTasks : <p>Add few tasks</p>}\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n            {/* <div className=\"done\">\r\n                <h3>Zadania zrobione <em>({doneTasks.length})</em></h3>\r\n                {doneTasks.length > 3 && <span style={{ fontSize: 10 }}>WyÅ›wietlone sÄ… jedynie 3 ostatnie elementy</span>}\r\n                {/* {doneTasks.length > 0 ? doneTasks.slice(0,3) : \"Mordo weÅº siÄ™ do roboty!\"} }\r\n                {doneTasks.slice(0, 3)}\r\n            </div> */}\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default TaskList;","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport '../styles/Navigation.css'\r\n\r\nconst BottomPanel = ({ isActive }) => {\r\n    const taskClassName = isActive.tasks ? 'tasks active' : 'tasks'\r\n    const addTaskClassName = isActive.add ? 'add-task active' : 'add-task'\r\n    const doneTasksClassName = isActive.done ? 'done-tasks active' : 'done-tasks'\r\n    return (\r\n        <div className=\"bottom-panel \">\r\n            <NavLink className={taskClassName} to={'/tasks'}>\r\n                <span></span><span></span><span></span><span></span>\r\n            </NavLink>\r\n            <NavLink className={addTaskClassName} to={'/add'}>\r\n                <span></span><span></span>\r\n            </NavLink>\r\n            <NavLink className={doneTasksClassName} to={'/done'}>\r\n            </NavLink >\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default BottomPanel;","export default __webpack_public_path__ + \"static/media/calendar.c3927202.svg\";","import AddTask from './AddTask'\nimport TaskList from './TaskList'\nimport Navigation from './Navigation'\n\nimport { Component } from 'react';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport { Switch, Route } from 'react-router-dom';\n\n\nimport '../styles/App.css';\nimport calendar from '../calendar.svg'\n\nclass App extends Component {\n\n  state = {\n    tasks: [\n      {\n        id: 0,\n        text: 'zagraÄ‡ w WiedÅºmina',\n        date: '2021-02-15',\n        important: true,\n        active: true,\n        finishDate: null\n      },\n      {\n        id: 1,\n        text: 'zrobic dobry uczynek',\n        date: '2021-06-15',\n        important: false,\n        active: true,\n        finishDate: null\n      },\n      {\n        id: 2,\n        text: 'Kupic mleko',\n        date: '2021-01-25',\n        important: true,\n        active: true,\n        finishDate: null\n      },\n      {\n        id: 3,\n        text: 'umyÄ‡ samochÃ³d',\n        date: '2021-02-24',\n        important: true,\n        active: true,\n        finishDate: null\n      },\n    ],\n    isActive: {\n      tasks: false,\n      add: false,\n      done: false,\n    }\n\n  }\n\n  counter = this.state.tasks.length\n\n  deleteTask = (id) => {\n    const tasks = [...this.state.tasks]\n    const index = tasks.findIndex(task => task.id === id)\n    tasks.splice(index, 1)\n    this.setState({\n      tasks\n    })\n  }\n\n  changeTaskStatus = (id) => {\n    const tasks = [...this.state.tasks]\n    tasks.forEach(task => {\n      if (task.id === id) {\n        task.active = false;\n        task.finishDate = new Date().getTime()\n      }\n    })\n    this.setState({\n      tasks\n    })\n\n  }\n\n  addTask = (text, date, important) => {\n    console.log('dodaj')\n    const task = {\n      id: this.counter,\n      text,\n      date,\n      important,\n      active: true,\n      finishDate: null\n    }\n    this.counter++;\n\n    const tasks = [...this.state.tasks, task];\n    this.setState({\n      tasks\n    })\n\n    return true\n  }\n\n  render() {\n    return (\n      <Router>\n        <div className=\"App\">\n          <header>\n            <div className='welcome'>\n              <h1>Good morning Mateusz</h1>\n              <img src={calendar} alt=\"calendar\" />\n            </div>\n\n            <h2> {this.state.tasks.length} tasks to do </h2>\n          </header>\n          <Switch>\n            <Route path={'/tasks'} render={() => <TaskList tasks={this.state.tasks} delete={this.deleteTask} change={this.changeTaskStatus} />} />\n            <Route path={'/add'} render={() => <AddTask add={this.addTask} />} />\n          </Switch>\n          <Navigation isActive={this.state.isActive} />\n        </div>\n      </Router>\n    );\n  }\n\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/index.css';\nimport App from './Components/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}